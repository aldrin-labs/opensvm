[build]
  command = "node scripts/build-rpc-config.js && next build"
  publish = ".next"

[build.environment]
  NODE_VERSION = "22"
  NEXT_TELEMETRY_DISABLED = "1"
  PUPPETEER_SKIP_DOWNLOAD = "true"
  NETLIFY_NEXT_PLUGIN_SKIP = "false"
  NPM_FLAGS = "--legacy-peer-deps"
  # Build optimization flags
  NODE_OPTIONS = "--max-old-space-size=4096"
  ANALYZE = "false"

# Function configuration - selective environment variables
[functions]
  # Include the RPC configuration file AND Solana documentation in functions
  included_files = ["config/rpc-config.json", "config/rpc-endpoints.js", "public/solana-rpc-llms.md"]


[[plugins]]
  package = "@netlify/plugin-nextjs"

# Selectively pass only essential environment variables to specific functions
[[plugins]]
  package = "netlify-plugin-inline-functions-env"
  [plugins.inputs]
    buildEvent = "onBuild"
    # Only include essential API keys, not large RPC lists
    include = ["TOGETHER_API_KEY"]

# Headers for static assets
[[headers]]
  for = "/_next/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Block access to sensitive configuration files with security headers
[[headers]]
  for = "/lib/rpc-config.json"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"

[[headers]]
  for = "/lib/rpc-endpoints.js"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"

[[headers]]
  for = "/lib/rpc-config.ts"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"

# Proxy requests that were redirected from api.opensvm.com
# The condition checks if the request came from api.opensvm.com domain
[[redirects]]
  from = "/*"
  to = "/api/proxy/rpc/:splat"
  status = 200
  force = true
  conditions = {Referer = ["https://api.opensvm.com/*", "http://api.opensvm.com/*"]}

# Alternative: Check for a specific header that indicates redirection from api.opensvm.com
[[redirects]]
  from = "/*"
  to = "/api/proxy/rpc/:splat"
  status = 200
  force = true
  headers = {X-Original-Host = "api.opensvm.com"}

# Redirect attempts to access config files to 404
[[redirects]]
  from = "/lib/rpc-config.json"
  to = "/404"
  status = 404

[[redirects]]
  from = "/lib/rpc-endpoints.js"
  to = "/404"
  status = 404

[[redirects]]
  from = "/lib/rpc-config.ts"
  to = "/404"
  status = 404
